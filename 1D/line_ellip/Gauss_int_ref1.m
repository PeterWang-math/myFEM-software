function [int_point,weight] = Gauss_int_ref1(Gauss_nodes)
% compute integration int_{-1}^1 f dx by Gaussian integration on reference
% element (-1,1), need number of nodes Gauss_nodes
% the output includes integral points and weights
% the algebra order is 2*Gauss_nodes-1
num = Gauss_nodes;
int_point = zeros(1,Gauss_nodes);
weight = int_point;
if floor(num)~=num || num<1 || num>8
    warning('Gauss_nodes must be a positive integer less than 9, already reset to 8');
    Gauss_nodes = 8;
end
switch Gauss_nodes
    case 1
            int_point(1) = 0;
            weight(1) = 2;

    case 2
            int_point(1:2) = [-0.5773502691896257645091488 , 0.5773502691896257645091488];
            weight(1:2) = [1,1];  

    case 3
            int_point(1:3) = [-0.7745966692414833770358531 , 0, 0.7745966692414833770358531];
            weight(1:3) = [0.5555555555555555555555556, 0.8888888888888888888888889, 0.5555555555555555555555556];

    case 4
            int_point(1:4) = [-0.8611363115940525752239465, -0.3399810435848562648026658, 0.3399810435848562648026658, 0.8611363115940525752239465];
            weight(1:4) = [0.3478548451374538573730639, 0.6521451548625461426269361, 0.6521451548625461426269361, 0.3478548451374538573730639];

    case 5
            int_point(1:5) = [-0.9061798459386639927976269, -0.5384693101056830910363144, 0, 0.5384693101056830910363144, 0.9061798459386639927976269];
            weight(1:5) = [0.2369268850561890875142640, 0.4786286704993664680412915, 0.5688888888888888888888889, 0.4786286704993664680412915, 0.2369268850561890875142640];

    case 6
            int_point(1:6) = [-0.2386191860831969086305017, -0.9324695142031520278123016, -0.6612093864662645136613996, ...
                          0.6612093864662645136613996 , 0.9324695142031520278123016 , 0.2386191860831969086305017];
            weight(1:6) = [0.4679139345726910473898703, 0.1713244923791703450402961, 0.3607615730481386075698335, ...
                      0.3607615730481386075698335, 0.1713244923791703450402961, 0.4679139345726910473898703];

    case 7
            int_point(1:7) = [-0.9491079123427585245261897, -0.7415311855993944398638648, -0.4058451513773971669066064, 0, ...
                          0.4058451513773971669066064, 0.7415311855993944398638648 , 0.9491079123427585245261897 ];
            weight(1:7) = [0.1294849661688696932706114, 0.2797053914892766679014678,  0.3818300505051189449503698, 0.4179591836734693877551020, ...
                      0.3818300505051189449503698, 0.2797053914892766679014678, 0.1294849661688696932706114];

    case 8
            int_point(1:8) = [-0.9602898564975362316835609, -0.7966664774136267395915539, -0.5255324099163289858177390, -0.1834346424956498049394761,...
                          0.1834346424956498049394761 , 0.5255324099163289858177390, 0.7966664774136267395915539 , 0.9602898564975362316835609];
            weight(1:8) = [0.1012285362903762591525314, 0.2223810344533744705443560, 0.3137066458778872873379622, 0.3626837833783619829651504,...
                      0.3626837833783619829651504, 0.3137066458778872873379622, 0.2223810344533744705443560, 0.1012285362903762591525314];

end

% vec = zeros(1,Gauss_nodes);
% for k=1:Gauss_nodes
%     vec(k) = feval(f,int_point(k));
% end
% y = weight*vec';

end

